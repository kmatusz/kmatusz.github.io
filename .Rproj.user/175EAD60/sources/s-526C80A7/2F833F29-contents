tm_bubbles(df_sf)
tm_shape(df_sf)
tm_shape(df_sf)+tm_bubbles()
tm_shape(df_sf)+tm_bubbles()
df_sf$geometry
df_sf$geometry[1]
df_sf$geometry[1][1]
tm_shape(df_sf)+tm_bubbles(size=.1)
tm_shape(df_sf)+tm_bubbles(size=.1)%>%tmap_leaflet()
(tm_shape(df_sf)+tm_bubbles(size=.1))%>%tmap_leaflet()
tmap_leaflet(tm_shape(df_sf)+tm_bubbles(size=.1))
a<-tm_shape(df_sf)+tm_bubbles(size=.1)
tmap_leaflet(a)
b<-tmap_leaflet(a)
b
df<-df%>%mutate(xCoord=ifelse(xCoordOracle!=0, xCoordOracle*x_coord_lm$coefficients[2]+x_coord_lm$coefficients[1], NA),
yCoord=ifelse(xCoordOracle!=0,yCoordOracle*y_coord_lm$coefficients[2]+y_coord_lm$coefficients[1], NA))
leaflet(df%>%select(xCoord, yCoord))%>%addProviderTiles(providers$OpenStreetMap.BlackAndWhite)%>%
addCircleMarkers(~xCoord, ~yCoord,  radius=4, fillOpacity = 0.5, stroke=F)
df%>%filter(is.na(street) & is.na(street2))%>%summarise(n())
df%>%summary()
df%>%summarise_all(function (x) mean(is.na(x)))
df%>%summarise_all(function (x) mean(is.na(x)))%>%gather()
df%>%summarise_all(function (x) mean(is.na(x)))%>%gather()%>%View()
setwd("C:/rwiz/churn-kaggle")
library(tidyverse)
churn<-read_csv("churn.csv")
View(churn)
library(tidyverse)
churn<-read_csv("churn.csv")
View(churn)
mean(is.na(churn))
summary(churn)
#change format from Yes to 1
churn%>%mutate_all(function (x) ifelse(x=="Yes", 1, x))
#change format from Yes to 1
churn%>%
mutate_all(function (x) ifelse(x=="Yes", 1, x))%>%
mutate_all(function (x) ifelse(x=="No", 0, x))%>%
mutate_all(function (x) ifelse(x=="Female", 0, x))%>%
mutate_all(function (x) ifelse(x=="Male", 1, x))->churn
#change format from Yes to 1
churn%>%
mutate_all(function (x) ifelse(x=="Yes", 1, x))%>%
mutate_all(function (x) ifelse(x=="No", 0, x))%>%
mutate_all(function (x) ifelse(x=="Female", 0, x))%>%
mutate_all(function (x) ifelse(x=="Male", 1, x))%>%
mutate_each( funs(as.numeric))
churn
#change format from Yes to 1
churn%>%
mutate_all(function (x) ifelse(x=="Yes", 1, x))%>%
mutate_all(function (x) ifelse(x=="No", 0, x))%>%
mutate_all(function (x) ifelse(x=="Female", 0, x))%>%
mutate_all(function (x) ifelse(x=="Male", 1, x))%>%
mutate_all( function (x) ifelse(is.numeric(x), as.numeric(x)))->churn2
#change format from Yes to 1
churn%>%
mutate_all(function (x) ifelse(x=="Yes", 1, x))%>%
mutate_all(function (x) ifelse(x=="No", 0, x))%>%
mutate_all(function (x) ifelse(x=="Female", 0, x))%>%
mutate_all(function (x) ifelse(x=="Male", 1, x))%>%
mutate_all( function (x) ifelse(is.numeric(x), as.numeric(x), x))->churn2
#change format from Yes to 1
churn%>%
mutate_all(function (x) ifelse(x=="Yes", 1, x))%>%
mutate_all(function (x) ifelse(x=="No", 0, x))%>%
mutate_all(function (x) ifelse(x=="Female", 0, x))%>%
mutate_all(function (x) ifelse(x=="Male", 1, x))%>%
as.matrix()->churn2
#change format from Yes to 1
churn%>%
mutate_all(function (x) ifelse(x=="Yes", 1, x))%>%
mutate_all(function (x) ifelse(x=="No", 0, x))%>%
mutate_all(function (x) ifelse(x=="Female", 0, x))%>%
mutate_all(function (x) ifelse(x=="Male", 1, x))%>%
as.matrix()%>%
as.data.frame()->churn2
#change format from Yes to 1
churn%>%
mutate_all(function (x) ifelse(x=="Yes", 1, x))%>%
mutate_all(function (x) ifelse(x=="No", 0, x))%>%
mutate_all(function (x) ifelse(x=="Female", 0, x))%>%
mutate_all(function (x) ifelse(x=="Male", 1, x))->churn2
#change format from Yes to 1
churn%>%
mutate_all(function (x) ifelse(x=="Yes" , 1, x))%>%
mutate_all(function (x) ifelse(x=="No", 0, x))%>%
mutate_all(function (x) ifelse(x=="Female", 0, x))%>%
mutate_all(function (x) ifelse(x=="Male", 1, x))->churn
GGally::ggpairs(churn)
GGally::ggpairs(churn%>%select(-customerID))
GGally::ggpairs(churn%>%select(churn, gender, SeniorCitizen))
GGally::ggpairs(churn%>%select(Churn, gender, SeniorCitizen))
table(churn, churn$Churn)
table(churn%>%select(-customerID))
table(churn$Churn)
table(churn$Churn, churn$gender)
table(churn$Churn, churn$StreamingMovies)
GGally::ggpairs(churn, color=Churn)
GGally::ggpairs(churn, aes(color=Churn))
GGally::ggpairs(churn%>%select(-customerID), aes(color=Churn))
names(churn)
names(churn)[1,2]
names(churn)[c(1,2)]
names_demographic<- names(churn)[c(2, 3,4, 5)]
names_services<- names(churn)[c(6, 7, 8, 9, 10, 11, 12, 13, 14, 15)]
ggplot(churn, aes(x= names_services[1], color=Churn))+geom_bar()
ggplot(churn, aes(x= names_services[1], fill=Churn))+geom_bar()
ggplot(churn, aes(x= names_services[1], fill=Churn))+geom_bar(stat="mean")
ggplot(churn, aes(x= names_services[1], fill=Churn))+geom_bar(stat=mean)
ggplot(churn, aes(x= names_services[1], fill=Churn))+geom_bar(position=dodge)
ggplot(churn, aes(x= names_services[1], fill=Churn))+geom_bar(position='dodge')
ggplot(churn, aes(x= names_services[1], fill=Churn))+
geom_bar(position='dodge')+theme_minimal()
ggplot(churn, aes(x= names_services[1], fill=Churn))+
geom_bar(position='dodge')+theme_minimal()
ggplot(churn, aes(x= names_services[2], fill=Churn))+
geom_bar(position='dodge')+theme_minimal()
names_demographic
ggplot(churn, aes(x= names_services[2], fill=Churn))+
geom_bar(position='dodge')+theme_minimal()
ggplot(churn, aes(x= names_services[1], fill=Churn))+
geom_bar(position='dodge')+theme_minimal()
ggplot(churn, aes(x= names_services[1], fill='Churn'))+
geom_bar(position='dodge')+theme_minimal()
ggplot(churn, aes(x= churn[names_services[1]], fill=Churn))+
geom_bar(position='dodge')+theme_minimal()
churn[names_services[1]]
ggplot(churn, aes(x=names_services[1], fill=Churn))+
geom_bar(position='dodge')+theme_minimal()
ggplot(churn, aes_string(x=names_services[1], fill='Churn'))+
geom_bar(position='dodge')+theme_minimal()
names_services[1]
names_services<- names(churn)[c( 7, 8, 9, 10, 11, 12, 13, 14, 15)]
ggplot(churn, aes_string(x=names_demographic[1], fill='Churn'))+
geom_bar(position='dodge')+theme_minimal()
ggplot(churn, aes_string(x=names_demographic[1], fill='Churn'))+
geom_bar(position='dodge')+theme_minimal()+geom_text()
ggplot(churn, aes_string(x=names_demographic[1], fill='Churn'))+
geom_bar(position='dodge')+theme_minimal()+geom_label()
ggplot(churn, aes_string(x=names_demographic[1], fill='Churn'))+
geom_bar(position='dodge')+theme_minimal()+geom_label(position = 'dodge')
ggplot(churn, aes_string(x=names_demographic[1], fill='Churn'))+
geom_bar(position='dodge')+theme_minimal()
plots_demographic<-vector("list", length(names_demographic))
plots_demographic<-vector("list", length(names_demographic))
for (i in 1:length(names_demographic)){
plots_demographic[i]<-ggplot(churn, aes_string(x=names_demographic[i], fill='Churn'))+
geom_bar(position='dodge')+theme_minimal()
}
plots_demographic[[i]]<-ggplot(churn, aes_string(x=names_demographic[i], fill='Churn'))+
geom_bar(position='dodge')+theme_minimal()
for (i in 1:length(names_demographic)){
plots_demographic[[i]]<-ggplot(churn, aes_string(x=names_demographic[i], fill='Churn'))+
geom_bar(position='dodge')+theme_minimal()
}
plots_demographic<-vector("list", length(names_demographic))
for (i in 1:length(names_demographic)){
plots_demographic[[i]]<-ggplot(churn, aes_string(x=names_demographic[i], fill='Churn'))+
geom_bar(position='dodge')+theme_minimal()+coord_flip()
}
plots_demographic[[1]]
library(gridExtra)
grid.arrange(plots_demographic)
grid.arrange(plots_demographic[[1]],
plots_demographic[[2]],
plots_demographic[[3]],
plots_demographic[[4]])
grid.arrange(plots_demographic[[1]],
plots_demographic[[2]],
plots_demographic[[3]],
plots_demographic[[4]], ncol=1)
plots_demographic<-vector("list", length(names_demographic))
for (i in 1:length(names_demographic)){
plots_demographic[[i]]<-ggplot(churn, aes_string(x=names_demographic[i], fill='Churn'))+
geom_bar(aes(y = (..count..)/sum(..count..))) +
scale_y_continuous(labels=scales::percent) +
ylab("relative frequencies")+
theme_minimal()+coord_flip()
}
grid.arrange(plots_demographic[[1]],
plots_demographic[[2]],
plots_demographic[[3]],
plots_demographic[[4]], ncol=1)
for (i in 1:length(names_demographic)){
plots_demographic[[i]]<-ggplot(churn, aes_string(x=names_demographic[i], fill='Churn'))+
geom_bar(aes(y = (..count..)/sum(..count..)), position = "dodge") +
scale_y_continuous(labels=scales::percent) +
ylab("relative frequencies")+
theme_minimal()+coord_flip()
}
grid.arrange(plots_demographic[[1]],
plots_demographic[[2]],
plots_demographic[[3]],
plots_demographic[[4]], ncol=1)
for (i in 1:length(names_demographic)){
plots_demographic[[i]]<-ggplot(churn, aes_string(x=names_demographic[i], fill='Churn'))+
geom_bar(aes(y = (..count..)/sum(..count..)), position = "dodge") +
scale_y_continuous(labels=scales::percent) +
ylab("Frequency")+
theme_minimal()+coord_flip()
}
plots_demographic_all<-grid.arrange(plots_demographic[[1]],
plots_demographic[[2]],
plots_demographic[[3]],
plots_demographic[[4]], ncol=1)
plots_services_all<-grid.arrange(plots_services[[1]],
plots_services[[2]],
plots_services[[3]],
plots_services[[4]],
plots_services[[5]],
plots_services[[6]],
plots_services[[7]],
plots_services[[8]],
plots_services[[9]],
ncol=1)
plots_services<-vector("list", length(names_demographic))
for (i in 1:length(names_services)){
plots_services[[i]]<-ggplot(churn, aes_string(x=names_services[i], fill='Churn'))+
geom_bar(aes(y = (..count..)/sum(..count..)), position = "dodge") +
scale_y_continuous(labels=scales::percent) +
ylab("Frequency")+
theme_minimal()+coord_flip()
}
library(gridExtra)
plots_services_all<-grid.arrange(plots_services[[1]],
plots_services[[2]],
plots_services[[3]],
plots_services[[4]],
plots_services[[5]],
plots_services[[6]],
plots_services[[7]],
plots_services[[8]],
plots_services[[9]],
ncol=1)
plots_services_all<-grid.arrange(plots_services[[1]],
plots_services[[2]],
plots_services[[3]],
plots_services[[4]],
plots_services[[5]],
plots_services[[6]],
plots_services[[7]],
plots_services[[8]],
plots_services[[9]],
ncol=3)
names_numeric<-churn[c(6,19,20)]
ggplot(churn, aes_string(x='Churn', y=names_numeric[1], fill='churn'))+
geom_boxplot()
ggplot(churn, aes_string(x='Churn', y=names_numeric[1], fill='Churn'))+
geom_boxplot()
ggplot(churn, aes_string(x='Churn', y=names_numeric[1], fill='Churn'))#+
names_numeric<-names(churn)[c(6,19,20)]
ggplot(churn, aes_string(x='Churn', y=names_numeric[1], fill='Churn'))#+
ggplot(churn, aes_string(x='Churn', y=names_numeric[1], fill='Churn'))+
geom_boxplot()
ggplot(churn, aes_string(x='Churn', y=names_numeric[1], fill='Churn'))+
geom_boxplot()+theme_minimal()
ggplot(churn, aes_string(x='Churn', y=names_numeric[1], fill='Churn'))+
geom_violin()+theme_minimal()
ggplot(churn, aes_string(x='Churn', y=names_numeric[1], fill='Churn'))+
geom_boxplot()+theme_minimal()
grid_arrange(ggplot(churn, aes_string(x='Churn', y=names_numeric[1], fill='Churn'))+
geom_boxplot()+theme_minimal(),
ggplot(churn, aes_string(x='Churn', y=names_numeric[2], fill='Churn'))+
geom_boxplot()+theme_minimal(),
ggplot(churn, aes_string(x='Churn', y=names_numeric[3], fill='Churn'))+
geom_boxplot()+theme_minimal(), ncol=3)
grid.arrange(ggplot(churn, aes_string(x='Churn', y=names_numeric[1], fill='Churn'))+
geom_boxplot()+theme_minimal(),
ggplot(churn, aes_string(x='Churn', y=names_numeric[2], fill='Churn'))+
geom_boxplot()+theme_minimal(),
ggplot(churn, aes_string(x='Churn', y=names_numeric[3], fill='Churn'))+
geom_boxplot()+theme_minimal(), ncol=3)
plots_numeric_all<-grid.arrange(ggplot(churn, aes_string(x='Churn', y=names_numeric[1], fill='Churn'))+
geom_boxplot()+theme_minimal(),
ggplot(churn, aes_string(x='Churn', y=names_numeric[2], fill='Churn'))+
geom_boxplot()+theme_minimal(),
ggplot(churn, aes_string(x='Churn', y=names_numeric[3], fill='Churn'))+
geom_boxplot()+theme_minimal(), ncol=3)
plots_numeric_all<-grid.arrange(ggplot(churn, aes_string(x='Churn', y=names_numeric[1], fill='Churn'))+
geom_boxplot()+theme_minimal()+guides(x=FALSE),
ggplot(churn, aes_string(x='Churn', y=names_numeric[2], fill='Churn'))+
geom_boxplot()+theme_minimal(),
ggplot(churn, aes_string(x='Churn', y=names_numeric[3], fill='Churn'))+
geom_boxplot()+theme_minimal(), ncol=3)
plots_numeric_all<-grid.arrange(ggplot(churn, aes_string(x='Churn', y=names_numeric[1], fill='Churn'))+
geom_boxplot()+theme_minimal()+guides(x=FALSE, fill=F),
ggplot(churn, aes_string(x='Churn', y=names_numeric[2], fill='Churn'))+
geom_boxplot()+theme_minimal(),
ggplot(churn, aes_string(x='Churn', y=names_numeric[3], fill='Churn'))+
geom_boxplot()+theme_minimal(), ncol=3)
plots_services_all<-grid.arrange(plots_services[[1]]+guides(x=FALSE, fill=F),
plots_services[[2]],
plots_services[[3]],
plots_services[[4]],
plots_services[[5]],
plots_services[[6]],
plots_services[[7]],
plots_services[[8]],
plots_services[[9]],
ncol=3)
plots_numeric_all<-grid.arrange(ggplot(churn, aes_string(x='Churn', y=names_numeric[1], fill='Churn'))+
geom_boxplot()+theme_minimal()+guides(x=FALSE, fill=F),
ggplot(churn, aes_string(x='Churn', y=names_numeric[2], fill='Churn'))+
geom_boxplot()+theme_minimal()+guides(x=FALSE, fill=F),
ggplot(churn, aes_string(x='Churn', y=names_numeric[3], fill='Churn'))+
geom_boxplot()+theme_minimal(), ncol=3)
rpart::rpart(Churn~., churn)
#intuition- more charges and less tenure leads to bigger probability of churn
churn<-churn%>%select(-customerID)
rpart::rpart(Churn~., churn)
plot(rpart::rpart(Churn~., churn))
randomForest::randomForest(Churn~., churn)
randomForest::randomForest(Churn~., churn, na.action=na.omit)
randomForest::randomForest(Churn~., churn)
churn_model<-na.omit(churn)
randomForest::randomForest(Churn~., churn_model)
churn_model$Churn<-factor(churn_model$Churn)
randomForest::randomForest(Churn~., churn_model)
model_forest<-randomForest::randomForest(Churn~., churn_model)
sum(is.na(churn_model))
model_forest<-randomForest::randomForest(Churn~., churn_model)
churn_model<-churn_model%>% mutate_if(is.character, as.factor)
model_forest<-randomForest::randomForest(Churn~., churn_model)
randomForest::varImpPlot(model_forest)
randomForest::varImpPlot(model_forest)
cor(churn$TotalCharges, churn$MonthlyCharges)
corr(churn$TotalCharges, churn$MonthlyCharges)
cor(churn$TotalCharges, churn$MonthlyCharges)
cor(churn[19], churn[20])
cor(churn[18], churn[19])
cor(churn%>%select_if(is.numeric))
churn_model<-na.omit(churn)
cor(churn_model%>%select_if(is.numeric))
tree<- rpart::rpart(Churn~TotalCharges+ MonthlyCharges+ tenure, churn_model)
summary(tree)
plot(tree)
tree
cor(churn_model%>%select_if(is.numeric))
tree<- rpart::rpart(Churn~ MonthlyCharges+ tenure, churn_model)
summary(tree)
plot(tree)
print(tree)
#tenure i total charges są skorelowane
churn
#tenure i total charges są skorelowane
ggplot(churn, aes(x=tenure, y= TotalCharges))+
geom_point(aes(color=Churn))+
geom_smooth(method = "linear", alpha=0)
#tenure i total charges są skorelowane
ggplot(churn, aes(x=tenure, y= TotalCharges))+
geom_point(aes(color=Churn))+
geom_smooth(method = "linear")
#tenure i total charges są skorelowane
ggplot(churn, aes(x=tenure, y= TotalCharges))+
geom_point(aes(color=Churn))+
geom_smooth(method = "lm")
#tenure i total charges są skorelowane
ggplot(churn, aes(x=tenure, y= TotalCharges))+
geom_point(aes(color=Churn), alpha=0.5)+
geom_smooth(method = "lm")
#tenure i total charges są skorelowane
ggplot(churn, aes(x=tenure, y= TotalCharges))+
geom_jitter(aes(color=Churn), alpha=0.5)+
geom_smooth(method = "lm")
#tenure i total charges są skorelowane
ggplot(churn, aes(x=tenure, y= TotalCharges))+
geom_jitter(aes(color=Churn), alpha=0.5)+
geom_smooth(method = "lm")+
theme_bw()
#tenure i total charges są skorelowane
ggplot(churn, aes(x=tenure, y= TotalCharges))+
geom_jitter(aes(color=Churn), alpha=0.5)+
geom_smooth(method = "lm")+
theme_minimal()
#tenure i total charges są skorelowane
ggplot(churn, aes(x=tenure, y= TotalCharges))+
geom_jitter(aes(color=Churn), alpha=0.5)+
geom_smooth(method = "lm")+
theme_minimal()+
labs(x="Długość umowy", y="Wartość wszystkich wpłat", title="Zależnosć długości umowy i wpłat")
#tenure i total charges są skorelowane
ggplot(churn, aes(x=tenure, y= TotalCharges))+
geom_jitter(aes(color=Churn), alpha=0.5)+
geom_smooth(method = "lm")+
theme_minimal()+
labs(x="Długość umowy", y="Wartość wszystkich wpłat", title="Zależnosć długości umowy i wpłat")+
scale_fill_discrete(breaks=c("Odejście klienta", "Klient w firmie"), name="Odejście klienta")
#tenure i total charges są skorelowane
ggplot(churn, aes(x=tenure, y= TotalCharges))+
geom_jitter(aes(color=Churn), alpha=0.5)+
geom_smooth(method = "lm")+
theme_minimal()+
labs(x="Długość umowy", y="Wartość wszystkich wpłat", title="Zależnosć długości umowy i wpłat")+
scale_color_discrete(breaks=c("Odejście klienta", "Klient w firmie"), name="Odejście klienta")
#tenure i total charges są skorelowane
ggplot(churn, aes(x=tenure, y= TotalCharges))+
geom_jitter(aes(color=Churn), alpha=0.5)+
geom_smooth(method = "lm")+
theme_minimal()+
labs(x="Długość umowy", y="Wartość wszystkich wpłat", title="Zależnosć długości umowy i wpłat")+
scale_colour_discrete(breaks=c("Odejście klienta", "Klient w firmie"), name="Odejście klienta")
#tenure i total charges są skorelowane
ggplot(churn, aes(x=tenure, y= TotalCharges))+
geom_jitter(aes(color=Churn), alpha=0.5)+
geom_smooth(method = "lm")+
theme_minimal()+
labs(x="Długość umowy", y="Wartość wszystkich wpłat", title="Zależnosć długości umowy i wpłat")#+
#tenure i total charges są skorelowane
ggplot(churn, aes(x=tenure, y= TotalCharges))+
geom_jitter(aes(color=Churn), alpha=0.5)+
geom_smooth(method = "lm")+
theme_minimal()+
labs(x="Długość umowy", y="Wartość wszystkich wpłat", title="Zależnosć długości umowy i wpłat")+
scale_colour_discrete(breaks=c("Odejście klienta", "Klient w firmie"))
#tenure i total charges są skorelowane
ggplot(churn, aes(x=tenure, y= TotalCharges))+
geom_jitter(aes(color=Churn), alpha=0.5)+
geom_smooth(method = "lm")+
theme_minimal()+
labs(x="Długość umowy", y="Wartość wszystkich wpłat", title="Zależnosć długości umowy i wpłat")+
scale_colour_discrete()
#tenure i total charges są skorelowane
ggplot(churn, aes(x=tenure, y= TotalCharges))+
geom_jitter(aes(color=Churn), alpha=0.5)+
geom_smooth(method = "lm")+
theme_minimal()+
labs(x="Długość umowy", y="Wartość wszystkich wpłat", title="Zależnosć długości umowy i wpłat")+
scale_colour_discrete(name="a")
#tenure i total charges są skorelowane
ggplot(churn, aes(x=tenure, y= TotalCharges))+
geom_jitter(aes(color=Churn), alpha=0.5)+
geom_smooth(method = "lm")+
theme_minimal()+
labs(x="Długość umowy", y="Wartość wszystkich wpłat", title="Zależnosć długości umowy i wpłat")+
scale_colour_brewer(name="a")
#tenure i total charges są skorelowane
ggplot(churn, aes(x=tenure, y= TotalCharges))+
geom_jitter(aes(color=Churn), alpha=0.5)+
geom_smooth(method = "lm")+
theme_minimal()+
labs(x="Długość umowy", y="Wartość wszystkich wpłat", title="Zależnosć długości umowy i wpłat")+
scale_colour_brewer(name="a", palette = "green")
#tenure i total charges są skorelowane
ggplot(churn, aes(x=tenure, y= TotalCharges))+
geom_jitter(aes(color=Churn), alpha=0.5)+
geom_smooth(method = "lm")+
theme_minimal()+
labs(x="Długość umowy", y="Wartość wszystkich wpłat", title="Zależnosć długości umowy i wpłat")+
scale_colour_brewer(name="a", palette = "Greens")
#tenure i total charges są skorelowane
ggplot(churn, aes(x=tenure, y= TotalCharges))+
geom_jitter(aes(color=Churn), alpha=0.5)+
geom_smooth(method = "lm")+
theme_minimal()+
labs(x="Długość umowy", y="Wartość wszystkich wpłat", title="Zależnosć długości umowy i wpłat")+
scale_colour_brewer(name="a", palette = "Set1")
#tenure i total charges są skorelowane
ggplot(churn%>%mutate(churn=ifelse(Churn=="1", "Tak", "Nie")), aes(x=tenure, y= TotalCharges))+
geom_jitter(aes(color=Churn), alpha=0.5)+
geom_smooth(method = "lm")+
theme_minimal()+
labs(x="Długość umowy", y="Wartość wszystkich wpłat", title="Zależnosć długości umowy i wpłat")+
scale_colour_brewer(name="a", palette = "Set1")
#tenure i total charges są skorelowane
ggplot(churn%>%mutate(churn=ifelse(Churn=="1", "Tak", "Nie")), aes(x=tenure, y= TotalCharges))+
geom_jitter(aes(color=Churn), alpha=0.5)+
geom_smooth(method = "lm")+
theme_minimal()+
labs(x="Długość umowy", y="Wartość wszystkich wpłat", title="Zależnosć długości umowy i wpłat")+
scale_colour_brewer(name="a", palette = "Paired")
#tenure i total charges są skorelowane
ggplot(churn%>%mutate(Churn=ifelse(Churn=="1", "Tak", "Nie")), aes(x=tenure, y= TotalCharges))+
geom_jitter(aes(color=Churn), alpha=0.5)+
geom_smooth(method = "lm")+
theme_minimal()+
labs(x="Długość umowy", y="Wartość wszystkich wpłat", title="Zależnosć długości umowy i wpłat")+
scale_colour_brewer(name="a", palette = "Paired")
#tenure i total charges są skorelowane
ggplot(churn%>%mutate(Churn=ifelse(Churn=="1", "Tak", "Nie")), aes(x=tenure, y= TotalCharges))+
geom_jitter(aes(color=Churn), alpha=0.5)+
geom_smooth(method = "lm")+
theme_minimal()+
labs(x="Długość umowy", y="Wartość wszystkich wpłat", title="Zależnosć długości umowy i wpłat")+
scale_colour_brewer(name="a", palette = "Paired", guide = guide_legend(reverse=TRUE))
#tenure i total charges są skorelowane
ggplot(churn%>%mutate(Churn=ifelse(Churn=="1", "Tak", "Nie")), aes(x=tenure, y= TotalCharges))+
geom_jitter(aes(color=Churn), alpha=0.5)+
geom_smooth(method = "lm")+
theme_minimal()+
labs(x="Długość umowy", y="Wartość wszystkich wpłat", title="Zależnosć długości umowy i wpłat")+
scale_colour_brewer(name="a", palette = "Paired", guide = guide_legend(reverse=TRUE))+
scale_x_continuous(breaks = seq(0, 80, 10))
#tenure i total charges są skorelowane
ggplot(churn%>%mutate(Churn=ifelse(Churn=="1", "Tak", "Nie")), aes(x=tenure, y= TotalCharges))+
geom_jitter(aes(color=Churn), alpha=0.5)+
geom_smooth(method = "lm")+
theme_minimal()+
labs(x="Długość umowy (miesiące)", y="Wartość wszystkich wpłat", title="Zależnosć długości umowy i wpłat")+
scale_colour_brewer(name="a", palette = "Paired", guide = guide_legend(reverse=TRUE))+
scale_x_continuous(breaks = seq(0, 80, 10))+
scale_y_continuous(breaks = seq(0, 10000, 1000))
#tenure i total charges są skorelowane
ggplot(churn%>%mutate(Churn=ifelse(Churn=="1", "Tak", "Nie")), aes(x=tenure, y= TotalCharges))+
geom_jitter(aes(color=Churn), alpha=0.5)+
geom_smooth(method = "lm", color="red")+
theme_minimal()+
labs(x="Długość umowy (miesiące)", y="Wartość wszystkich wpłat", title="Zależnosć długości umowy i wpłat")+
scale_colour_brewer(name="a", palette = "Paired", guide = guide_legend(reverse=TRUE))+
scale_x_continuous(breaks = seq(0, 80, 10))+
scale_y_continuous(breaks = seq(0, 10000, 1000),labels=function(x) format(x, big.mark = " ", scientific = FALSE))
